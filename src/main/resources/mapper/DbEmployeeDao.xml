<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.DbEmployeeDao">

    <resultMap type="com.example.demo.entity.DbEmployee" id="DbEmployeeMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="employeeId" column="employeeId" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="employeeName" column="employeeName" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="DbEmployeeMap">
        select id,
               employeeId,
               sex,
               phone,
               email,
               employeeName,
               age
        from chenyanlong.db_employee
        where employeeId = #{employeeId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="DbEmployeeMap">
        select id,
               employeeId,
               sex,
               phone,
               email,
               employeeName,
               age
        from chenyanlong.db_employee
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="DbEmployeeMap">
        select
        id, employeeId, sex, phone, email, employeeName, age
        from chenyanlong.db_employee
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="employeeId != null and employeeid != ''">
                and employeeId = #{employeId}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="employeeName != null and employeeName != ''">
                and employeeName = #{employeeName}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="employeeId" useGeneratedKeys="true">
        insert into chenyanlong.db_employee(id, sex, phone, email, employeeName, age,employeeId)
        values (#{id}, #{sex}, #{phone}, #{email}, #{employeeName}, #{age},#{employeeId})
    </insert>

    <insert id="insertBatch" keyProperty="employeeId" useGeneratedKeys="true">
        insert into chenyanlong.db_employee(id, sex, phone, email, employeeName, age)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.sex}, #{entity.phone}, #{entity.email}, #{entity.employeename}, #{entity.age})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="employeeid" useGeneratedKeys="true">
        insert into chenyanlong.db_employee(id, sex, phone, email, employeeName, age)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.sex}, #{entity.phone}, #{entity.email}, #{entity.employeename}, #{entity.age})
        </foreach>
        on duplicate key update
        id = values(id) , sex = values(sex) , phone = values(phone) , email = values(email) , employeeName =
        values(employeeName) , age = values(age)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update chenyanlong.db_employee
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="employeeName != null and employeeName != ''">
                employeeName = #{employeeName},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
        </set>
        where employeeId = #{employeeId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from chenyanlong.db_employee
        where employeeId = #{employeeId}
    </delete>

</mapper>

